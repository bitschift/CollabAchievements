<?php
/**************************************
htmlallentities($str)


***************************************/
function htmlallentities($str){
  $res = '';
  $strlen = strlen($str);
  for($i=0; $i<$strlen; $i++){
    $byte = ord($str[$i]);
    if($byte < 128) // 1-byte char
      $res .= $str[$i];
    elseif($byte < 192); // invalid utf8
    elseif($byte < 224) // 2-byte char
      $res .= '&#'.((63&$byte)*64 + (63&ord($str[++$i]))).';';
    elseif($byte < 240) // 3-byte char
      $res .= '&#'.((15&$byte)*4096 + (63&ord($str[++$i]))*64 + (63&ord($str[++$i]))).';';
    elseif($byte < 248) // 4-byte char
      $res .= '&#'.((15&$byte)*262144 + (63&ord($str[++$i]))*4096 + (63&ord($str[++$i]))*64 + (63&ord($str[++$i]))).';';
  }
  return $res;
}

/**************************************
create_message($filename, $data)

This function will parse through a file '$filename' and replace all template variables with values found in $data.
EG. {{myvalue}} will be replaced by the value of an array element ['myvalue'] found in data. 
If ['myvalue'] is not found for any location requested, it will remain. The user is responsible for verifying complete replacement if desired.

***************************************/
function create_message($filename, $data){
	$sample = file_get_contents($filename);
	if ($sample === FALSE){
		return 'File not found!<BR>';
	} else {
		foreach ($data as $k => $v) {	
		$sample =  str_replace('{{' . $k . '}}', $v , $sample);
		}
		return htmlallentities($sample);
	}
}

/**************************************
email_message($subject, $email, $body)

This function uses the standard php mail() function to send and email. It returns a 0 on success and a 1 on failure.
This function has hard coded header information for this specific webpage.

***************************************/
function email_message($subject, $email, $body){
	//set the from line to know this was autogenerated
	$headers = "From: Achievements Admin <achievements@engr.oregonstate.edu>\r\n";
	//$headers .= "BCC: heer@eecs.oregonstate.edu\r\n";
	$headers .= "Content-Type: text/html;charset=iso-8859-1\r\n";
	if(mail($email, $subject, wordwrap($body), $headers) ){
		//echo "<p>Email Sent</p>";
		return 0;
	} else {
		//echo "<p><B>Email not Sent</b></p>";
		return 1;
	}	
}

/**************************************
achievementlist($mysqli, $onid)

Returns an Array() of all achievements for $onid name given. 
Must be passed a valid mysqli object for database access
Returns null if onid id not found. 
Returns an empty Array if onid found but has not achievements.

***************************************/
function achievementlist($mysqli, $onid){
	$query = "SELECT * FROM users WHERE onid = '$onid'";
	$result = $mysqli->query($query);
	if ($result == NULL)
		return NULL;
	$userrow = $result->fetch_array();
	$query = "SELECT achievements.id, levels.level, levels.image, achievementList.name FROM achievements INNER JOIN achievementList ON achievements.achievementid = achievementList.id INNER JOIN levels ON levels.id = achievements.levelid WHERE achievements.userid = " . $userrow['id'] ." ORDER BY achievementList.name ASC, levels.level ASC";
	//echo $query . '<BR>';
	$result = $mysqli->query($query);
	$returnvalue = Array();
	while($row = $result->fetch_assoc())
		$returnvalue[] = $row; 
	return $returnvalue;
}

/**************************************
requestslist($mysqli, $onid)

Returns an Array() of all active reviews for $onid name given. 
Must be passed a valid mysqli object for database access
Returns null if onid id not found. 
Returns an empty Array if onid found but has no open reviews.

***************************************/
function requestslist($mysqli, $onid){
	$query = "SELECT * FROM users WHERE onid = '$onid'";
	$result = $mysqli->query($query);
	if ($result == NULL)
		return NULL;
	$row = $result->fetch_array();
	$myid = $row['id'];
	$query = "SELECT reviews.*, users.username, requests.evidence, requests.achievementid FROM reviews 
	INNER JOIN requests ON requests.id = reviews.requestid 
	INNER JOIN users ON users.id = requests.requesterid 
	WHERE reviews.reviewer = $myid AND reviews.completeddate IS NULL";
	//echo $query . '<BR>';
	$result = $mysqli->query($query);
	if ($result == NULL)
		return NULL;
	if ($result->num_rows == 0)
		return Array();
	
	$returnvalue = Array();
	while($row = $result->fetch_array()){
		$returnvalue[] = $row; 
	}
	return $returnvalue;
}

/**************************************
approvalslist($mysqli, $onid)

Returns an Array() of all active requests including voting status. 
Must be passed a valid mysqli object for database access 

***************************************/
function approvalslist($mysqli){
	$returnvalue = Array();
	$query = "SELECT requests.id, achievementList.name, levels.level, users.username, requests.evidence, requests.achievementid, requests.created, requests.requesterid FROM requests INNER JOIN levels ON levels.id = requests.achievementid INNER JOIN achievementList ON achievementList.id = levels.achievementid INNER JOIN users ON users.id = requests.requesterid WHERE status = 0 ORDER BY requests.created ASC";
	//echo $query . '<BR>';
	$result = $mysqli->query($query);
	if ($result == NULL)
		return $returnvalue;
	while($row = $result->fetch_array()){
		$returnvalue[] = $row; 
	}
	return $returnvalue;	
}

function addachievement($mysqli, $achievement, $level, $id){
	
	$empRes = $mysqli->query("SELECT achievements.*, levels.level FROM achievements INNER JOIN levels ON levels.id = achievements.levelid WHERE userid='$id'");
	//echo $query .'<BR>';
	$empAch = array();
	while($empRow = $empRes->fetch_array(MYSQLI_ASSOC))
		$empAch[] = $empRow;
	
	$done = false;
	foreach ($empAch as $row){
		if ($row['achievementid'] == $achievement){ //Already has at least one level
			if ($level == $row['level']){ // Already have this exact level
				echo "<script>alert('Already has this achievement at this level.');</script>";
				$done = true;
			} else if ($level < $row['level']){
				echo "<script>alert('Already has this achievement at a higher level. Adding this anyways.');</script>";
				$done = false;
			} else { 
				$done = false;
			}
		}
	}
	
	if ($done == false){ // We need to add this to 
		$query = "SELECT * FROM levels WHERE achievementid = $achievement AND level = $level";
		$levelRes = $mysqli->query($query);
		//echo $query . '<BR>';
		$levelRow = $levelRes->fetch_array(MYSQLI_ASSOC);

		$query = "INSERT INTO `achievements` (achievementid, levelid, userid) VALUES ($achievement, ".$levelRow['id'].", $id)";
		//echo $query . '<BR>';
		$mysqli->query($query);
		
		//Need to send confirmation email here
		$query = "SELECT * FROM users WHERE id = $id";
		$result = $mysqli->query($query);
		$row = $result->fetch_assoc();
		
		$query = "SELECT * FROM achievementList WHERE id = $achievement";
		$result = $mysqli->query($query);
		$temprow = $result->fetch_assoc();
		$row['name'] = $temprow['name'];
		$row['level'] = $level;
		
		email_message('Achievement ' . $row['name']  . ' Approved', $row['onid'] . '@oregonstate.edu', create_message('./emails/approved.eml', $row));
		
	}
}

function randomhash() {
    $alphabet = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890';
    $pass = array(); //remember to declare $pass as an array
    $alphaLength = strlen($alphabet) - 1; //put the length -1 in cache
    for ($i = 0; $i < 16; $i++) {
        $n = rand(0, $alphaLength);
        $pass[] = $alphabet[$n];
    }
    return implode($pass); //turn the array into a string
}

?>
